{"version":3,"file":"index.es.min.js","sources":["../node_modules/@glidejs/glide/dist/glide.esm.js","../modules/glide/index.js"],"sourcesContent":["/*!\n * Glide.js v3.6.2\n * (c) 2013-2024 Jędrzej Chałubek (https://github.com/jedrzejchalubek/)\n * Released under the MIT License.\n */\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A number of slides moved on single swipe.\n   *\n   * Available types:\n   * `` - Moves slider by one slide per swipe\n   * `|` - Moves slider between views per swipe (number of slides defined in `perView` options)\n   *\n   * @type {String}\n   */\n  perSwipe: '',\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n  /**\n   * Wait for the animation to finish until the next user input can be processed\n   *\n   * @type {boolean}\n   */\n  waitForTransition: true,\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Defines how many clones of current viewport will be generated.\n   *\n   * @type {Number}\n   */\n  cloningRatio: 1,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    type: {\n      slider: 'glide--slider',\n      carousel: 'glide--carousel'\n    },\n    slide: {\n      clone: 'glide__slide--clone',\n      active: 'glide__slide--active'\n    },\n    arrow: {\n      disabled: 'glide__arrow--disabled'\n    },\n    nav: {\n      active: 'glide__bullet--active'\n    }\n  }\n};\n\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \".concat(msg));\n}\n\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toInt(value) {\n  return parseInt(value);\n}\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\n\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction isObject(value) {\n  var type = _typeof(value);\n\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\n\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\n\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n    return r[k], r;\n  }, {});\n}\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\n\nfunction mergeOptions(defaults, settings) {\n  var options = Object.assign({}, defaults, settings); // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = Object.assign({}, defaults.classes, settings.classes);\n    var properties = ['direction', 'type', 'slide', 'arrow', 'nav'];\n    properties.forEach(function (property) {\n      if (settings.classes.hasOwnProperty(property)) {\n        options.classes[property] = _objectSpread2(_objectSpread2({}, defaults.classes[property]), settings.classes[property]);\n      }\n    });\n  }\n\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = Object.assign({}, defaults.breakpoints, settings.breakpoints);\n  }\n\n  return options;\n}\n\nvar EventsBus = /*#__PURE__*/function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBus);\n\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  _createClass(EventsBus, [{\n    key: \"on\",\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n\n        return;\n      } // Create the event's object if not yet created\n\n\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      } // Add the handler to queue\n\n\n      var index = this.events[event].push(handler) - 1; // Provide handle back for removal of event\n\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: \"emit\",\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n\n        return;\n      } // If the event doesn't exist, or there's no handlers in queue, just leave\n\n\n      if (!this.hop.call(this.events, event)) {\n        return;\n      } // Cycle through events queue, fire!\n\n\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n\n  return EventsBus;\n}();\n\nvar Glide$1 = /*#__PURE__*/function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Glide);\n\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\n\n  }, {\n    key: \"mutate\",\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n\n      return this;\n    }\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.settings = mergeOptions(this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     * `|>` - Move one viewport forward\r\n     * `|<` - Move one viewport backward\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"go\",\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"move\",\n    value: function move(distance) {\n      this._c.Transition.disable();\n\n      this._c.Move.make(distance);\n\n      return this;\n    }\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.disabled = true;\n      return this;\n    }\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.disabled = false;\n      return this;\n    }\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"isType\",\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"settings\",\n    get: function get() {\n      return this._o;\n    }\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\n    ,\n    set: function set(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this._i;\n    }\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\n    ,\n    set: function set(i) {\n      this._i = toInt(i);\n    }\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this.settings.type;\n    }\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._d;\n    }\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    ,\n    set: function set(status) {\n      this._d = !!status;\n    }\n  }]);\n\n  return Glide;\n}();\n\nfunction Run (Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        !Glide.settings.waitForTransition || Glide.disable();\n        this.move = move;\n        Events.emit('run.before', this.move);\n        this.calculate();\n        Events.emit('run', this.move);\n        Components.Transition.after(function () {\n          if (_this.isStart()) {\n            Events.emit('run.start', _this.move);\n          }\n\n          if (_this.isEnd()) {\n            Events.emit('run.end', _this.move);\n          }\n\n          if (_this.isOffset()) {\n            _this._o = false;\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n          Glide.enable();\n        });\n      }\n    },\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Number|Undefined}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction; // By default assume that size of view is equal to one slide\n\n      var viewSize = 1; // While direction is `=` we want jump to\n      // a specified index described in steps.\n\n      if (direction === '=') {\n        // Check if bound is true, \n        // as we want to avoid whitespaces.\n        if (Glide.settings.bound && toInt(steps) > length) {\n          Glide.index = length;\n          return;\n        }\n\n        Glide.index = steps;\n        return;\n      } // When pattern is equal to `>>` we want\n      // fast forward to the last slide.\n\n\n      if (direction === '>' && steps === '>') {\n        Glide.index = length;\n        return;\n      } // When pattern is equal to `<<` we want\n      // fast forward to the first slide.\n\n\n      if (direction === '<' && steps === '<') {\n        Glide.index = 0;\n        return;\n      } // pagination movement\n\n\n      if (direction === '|') {\n        viewSize = Glide.settings.perView || 1;\n      } // we are moving forward\n\n\n      if (direction === '>' || direction === '|' && steps === '>') {\n        var index = calculateForwardIndex(viewSize);\n\n        if (index > length) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeForwardIndex(index, viewSize);\n        return;\n      } // we are moving backward\n\n\n      if (direction === '<' || direction === '|' && steps === '<') {\n        var _index = calculateBackwardIndex(viewSize);\n\n        if (_index < 0) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeBackwardIndex(_index, viewSize);\n        return;\n      }\n\n      warn(\"Invalid direction pattern [\".concat(direction).concat(steps, \"] has been used\"));\n    },\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index <= 0;\n    },\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index >= this.length;\n    },\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n      if (!direction) {\n        return this._o;\n      }\n\n      if (!this._o) {\n        return false;\n      } // did we view to the right?\n\n\n      if (direction === '|>') {\n        return this.move.direction === '|' && this.move.steps === '>';\n      } // did we view to the left?\n\n\n      if (direction === '|<') {\n        return this.move.direction === '|' && this.move.steps === '<';\n      }\n\n      return this.move.direction === direction;\n    },\n\n    /**\n     * Checks if bound mode is active\n     *\n     * @return {Boolean}\n     */\n    isBound: function isBound() {\n      return Glide.isType('slider') && Glide.settings.focusAt !== 'center' && Glide.settings.bound;\n    }\n  };\n  /**\n   * Returns index value to move forward/to the right\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n  function calculateForwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index + viewSize;\n    }\n\n    return index + (viewSize - index % viewSize);\n  }\n  /**\n   * Normalizes the given forward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function normalizeForwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index <= length) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index - (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on the last possible index value given by bound\n      if (Run.isBound() && !Run.isEnd()) {\n        return length;\n      }\n\n      return 0;\n    }\n\n    if (Run.isBound()) {\n      return length;\n    }\n\n    return Math.floor(length / viewSize) * viewSize;\n  }\n  /**\n   * Calculates index value to move backward/to the left\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function calculateBackwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index - viewSize;\n    } // ensure our back navigation results in the same index as a forward navigation\n    // to experience a homogeneous paging\n\n\n    var view = Math.ceil(index / viewSize);\n    return (view - 1) * viewSize;\n  }\n  /**\n   * Normalizes the given backward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {*}\n   */\n\n\n  function normalizeBackwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index >= 0) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index + (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on first possible index value before we to rewind to the length given by bound\n      if (Run.isBound() && Run.isStart()) {\n        return length;\n      }\n\n      return Math.floor(length / viewSize) * viewSize;\n    }\n\n    return 0;\n  }\n\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      var step = value.substr(1);\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: step ? toInt(step) ? toInt(step) : step : 0\n      };\n    }\n  });\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length; // If the `bound` option is active, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n\n      if (this.isBound()) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n\n      return length - 1;\n    }\n  });\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n  return Run;\n}\n\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\nfunction now() {\n  return new Date().getTime();\n}\n\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction throttle(func, wait) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var timeout, context, args, result;\n  var previous = 0;\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\nfunction Gaps (Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimensions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * Components.Sizes.length;\n    }\n  });\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n  return Gaps;\n}\n\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  }\n\n  return [];\n}\n/**\n * Coerces a NodeList to an Array.\n *\n * @param  {NodeList} nodeList\n * @return {Array}\n */\n\nfunction toArray(nodeList) {\n  return Array.prototype.slice.call(nodeList);\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\nfunction Html (Glide, Components, Events) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.collectSlides();\n    },\n\n    /**\n     * Collect slides\n     */\n    collectSlides: function collectSlides() {\n      this.slides = toArray(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.slide.clone);\n      });\n    }\n  };\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (r !== null) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      Html._t = t;\n    }\n  });\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n  /**\n   * Add/remove/reorder dynamic slides\n   */\n\n  Events.on('update', function () {\n    Html.collectSlides();\n  });\n  return Html;\n}\n\nfunction Peek (Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n  return Peek;\n}\n\nfunction Move (Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.offset = offset;\n      Events.emit('move', {\n        movement: this.value\n      });\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n  return Move;\n}\n\nfunction Sizes (Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimensions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var width = \"\".concat(this.slideWidth, \"px\");\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = width;\n      }\n    },\n\n    /**\n     * Setups dimensions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper() {\n      Components.Html.wrapper.style.width = \"\".concat(this.wrapperSize, \"px\");\n    },\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the slider (visible area).\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.track.offsetWidth;\n    }\n  });\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of a single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimensions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n  return Sizes;\n}\n\nfunction Build (Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n      this.typeClass();\n      this.activeClass();\n      Events.emit('build.after');\n    },\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.type[Glide.settings.type]);\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      if (slide) {\n        slide.classList.add(classes.slide.active);\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.slide.active);\n        });\n      }\n    },\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var _Glide$settings$class = Glide.settings.classes,\n          type = _Glide$settings$class.type,\n          slide = _Glide$settings$class.slide;\n      Components.Html.root.classList.remove(type[Glide.settings.type]);\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(slide.active);\n      });\n    }\n  };\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimensions\n   * - on updating settings via API\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n  return Build;\n}\n\nfunction Clones (Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {[]}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n          perView = _Glide$settings.perView,\n          classes = _Glide$settings.classes,\n          cloningRatio = _Glide$settings.cloningRatio;\n\n      if (slides.length > 0) {\n        var peekIncrementer = +!!Glide.settings.peek;\n        var cloneCount = perView + peekIncrementer + Math.round(perView / 2);\n        var append = slides.slice(0, cloneCount).reverse();\n        var prepend = slides.slice(cloneCount * -1);\n\n        for (var r = 0; r < Math.max(cloningRatio, Math.floor(perView / slides.length)); r++) {\n          for (var i = 0; i < append.length; i++) {\n            var clone = append[i].cloneNode(true);\n            clone.classList.add(classes.slide.clone);\n            items.push(clone);\n          }\n\n          for (var _i = 0; _i < prepend.length; _i++) {\n            var _clone = prepend[_i].cloneNode(true);\n\n            _clone.classList.add(classes.slide.clone);\n\n            items.unshift(_clone);\n          }\n        }\n      }\n\n      return items;\n    },\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n          wrapper = _Components$Html.wrapper,\n          slides = _Components$Html.slides;\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half * -1).reverse();\n      var width = \"\".concat(Components.Sizes.slideWidth, \"px\");\n\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = width;\n      }\n    },\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimensions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n  return Clones;\n}\n\nvar EventsBinder = /*#__PURE__*/function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBinder);\n\n    this.listeners = listeners;\n  }\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @param  {Boolean|Object} capture\n   * @return {Void}\n   */\n\n\n  _createClass(EventsBinder, [{\n    key: \"on\",\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(events, el) {\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n\n  return EventsBinder;\n}();\n\nfunction Resize (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n  return Resize;\n}\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\nfunction Direction (Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n\n  Events.on('update', function () {\n    Direction.mount();\n  });\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n  return Direction;\n}\n\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Rtl (Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Gap (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var multiplier = Math.floor(translate / Components.Sizes.slideWidth);\n      return translate + Components.Gaps.value * multiplier;\n    }\n  };\n}\n\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Grow (Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction Peeking (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Focusing (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction mutator (Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n\n      return translate;\n    }\n  };\n}\n\nfunction Translate (Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n      var translate3d = \"translate3d(\".concat(-1 * transform, \"px, 0px, 0px)\");\n      Components.Html.wrapper.style.mozTransform = translate3d; // needed for supported Firefox 10-15\n\n      Components.Html.wrapper.style.webkitTransform = translate3d; // needed for supported Chrome 10-35, Safari 5.1-8, and Opera 15-22\n\n      Components.Html.wrapper.style.transform = translate3d;\n    },\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    },\n\n    /**\n     * @return {number}\n     */\n    getStartIndex: function getStartIndex() {\n      var length = Components.Sizes.length;\n      var index = Glide.index;\n      var perView = Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        return length + (index - perView);\n      } // \"modulo length\" converts an index that equals length to zero\n\n\n      return (index + perView) % length;\n    },\n\n    /**\n     * @return {number}\n     */\n    getTravelDistance: function getTravelDistance() {\n      var travelDistance = Components.Sizes.slideWidth * Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        // reverse travel distance so that we don't have to change subtract operations\n        return travelDistance * -1;\n      }\n\n      return travelDistance;\n    }\n  };\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n\n  Events.on('move', function (context) {\n    if (!Glide.isType('carousel') || !Components.Run.isOffset()) {\n      return Translate.set(context.movement);\n    }\n\n    Components.Transition.after(function () {\n      Events.emit('translate.jump');\n      Translate.set(Components.Sizes.slideWidth * Glide.index);\n    });\n    var startWidth = Components.Sizes.slideWidth * Components.Translate.getStartIndex();\n    return Translate.set(startWidth - Components.Translate.getTravelDistance());\n  });\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n  return Translate;\n}\n\nfunction Transition (Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (disabled) {\n        return \"\".concat(property, \" 0ms \").concat(settings.animationTimingFunc);\n      }\n\n      return \"\".concat(property, \" \").concat(this.duration, \"ms \").concat(settings.animationTimingFunc);\n    },\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n      this.set();\n    },\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n      this.set();\n    }\n  };\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n\n  Events.on('move', function () {\n    Transition.set();\n  });\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimensions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n\n  Events.on('run', function () {\n    Transition.enable();\n  });\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n  return Transition;\n}\n\n/**\n * Test via a getter in the options object to see\n * if the passive property is accessed.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nvar supportsPassive$1 = supportsPassive;\n\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\nfunction Swipe (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n        var swipe = this.touches(event);\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n        Events.emit('swipe.start');\n      }\n    },\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n            touchAngle = _Glide$settings.touchAngle,\n            touchRatio = _Glide$settings.touchRatio,\n            classes = _Glide$settings.classes;\n        var swipe = this.touches(event);\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        if (swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n          Components.Move.make(subExSx * toFloat(touchRatio));\n          Components.Html.root.classList.add(classes.dragging);\n          Events.emit('swipe.move');\n        } else {\n          return false;\n        }\n      }\n    },\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings2 = Glide.settings,\n            perSwipe = _Glide$settings2.perSwipe,\n            touchAngle = _Glide$settings2.touchAngle,\n            classes = _Glide$settings2.classes;\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        this.enable();\n\n        if (swipeDistance > threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \"<\")));\n        } else if (swipeDistance < -threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \">\")));\n        } else {\n          // While swipe don't reach distance apply previous transform.\n          Components.Move.make();\n        }\n\n        Components.Html.root.classList.remove(classes.dragging);\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n        Events.emit('swipe.end');\n      }\n    },\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n\n      var _Glide$settings3 = Glide.settings,\n          swipeThreshold = _Glide$settings3.swipeThreshold,\n          dragThreshold = _Glide$settings3.dragThreshold;\n\n      if (swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n\n      if (dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n    },\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle), capture);\n    },\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n      Components.Transition.enable();\n      return this;\n    },\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n      Components.Transition.disable();\n      return this;\n    }\n  };\n  /**\n   * Add component class:\n   * - after initial building\n   */\n\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n  return Swipe;\n}\n\nfunction Images (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n  return Images;\n}\n\nfunction Anchors (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var detached = false;\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var prevented = false;\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n      this.bind();\n    },\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      if (prevented) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n  return Anchors;\n}\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\nvar PREVIOUS_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\"<\\\"]\");\nvar NEXT_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\">\\\"]\");\nfunction Controls (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n      /**\n       * Collection of arrow control HTML elements.\n       *\n       * @private\n       * @type {Object}\n       */\n\n      this._arrowControls = {\n        previous: Components.Html.root.querySelectorAll(PREVIOUS_CONTROLS_SELECTOR),\n        next: Components.Html.root.querySelectorAll(NEXT_CONTROLS_SELECTOR)\n      };\n      this.addBindings();\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      if (!item) {\n        return;\n      }\n\n      item.classList.add(settings.classes.nav.active);\n      siblings(item).forEach(function (sibling) {\n        sibling.classList.remove(settings.classes.nav.active);\n      });\n    },\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      var item = controls[Glide.index];\n      item === null || item === void 0 ? void 0 : item.classList.remove(Glide.settings.classes.nav.active);\n    },\n\n    /**\n     * Calculates, removes or adds `Glide.settings.classes.disabledArrow` class on the control arrows\n     */\n    setArrowState: function setArrowState() {\n      if (Glide.settings.rewind) {\n        return;\n      }\n\n      var next = Controls._arrowControls.next;\n      var previous = Controls._arrowControls.previous;\n      this.resetArrowState(next, previous);\n\n      if (Glide.index === 0) {\n        this.disableArrow(previous);\n      }\n\n      if (Glide.index === Components.Run.length) {\n        this.disableArrow(next);\n      }\n    },\n\n    /**\n     * Removes `Glide.settings.classes.disabledArrow` from given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    resetArrowState: function resetArrowState() {\n      var settings = Glide.settings;\n\n      for (var _len = arguments.length, lists = new Array(_len), _key = 0; _key < _len; _key++) {\n        lists[_key] = arguments[_key];\n      }\n\n      lists.forEach(function (list) {\n        toArray(list).forEach(function (element) {\n          element.classList.remove(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds `Glide.settings.classes.disabledArrow` to given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    disableArrow: function disableArrow() {\n      var settings = Glide.settings;\n\n      for (var _len2 = arguments.length, lists = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        lists[_key2] = arguments[_key2];\n      }\n\n      lists.forEach(function (list) {\n        toArray(list).forEach(function (element) {\n          element.classList.add(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on('click', elements[i], this.click);\n        Binder.on('touchstart', elements[i], this.click, capture);\n      }\n    },\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in direction given via the\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {void}\n     */\n    click: function click(event) {\n      if (!supportsPassive$1 && event.type === 'touchstart') {\n        event.preventDefault();\n      }\n\n      var direction = event.currentTarget.getAttribute('data-glide-dir');\n      Components.Run.make(Components.Direction.resolve(direction));\n    }\n  };\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n  /**\n   * Add or remove disabled class of arrow elements\n   */\n\n  Events.on(['mount.after', 'run'], function () {\n    Controls.setArrowState();\n  });\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n  return Controls;\n}\n\nfunction Keyboard (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      var perSwipe = Glide.settings.perSwipe;\n      var arrowSymbols = {\n        ArrowRight: '>',\n        ArrowLeft: '<'\n      };\n\n      if (['ArrowRight', 'ArrowLeft'].includes(event.code)) {\n        Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe).concat(arrowSymbols[event.code])));\n      }\n    }\n  };\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Keyboard;\n}\n\nfunction Autoplay (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.enable();\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Enables autoplaying\n     *\n     * @returns {Void}\n     */\n    enable: function enable() {\n      this._e = true;\n    },\n\n    /**\n     * Disables autoplaying.\n     *\n     * @returns {Void}\n     */\n    disable: function disable() {\n      this._e = false;\n    },\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (!this._e) {\n        return;\n      }\n\n      this.enable();\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n\n            Events.emit('autoplay');\n          }, this.time);\n        }\n      }\n    },\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.stop();\n        }\n      });\n      Binder.on('mouseout', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.start();\n        }\n      });\n    },\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['run.before', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n  Events.on(['pause', 'destroy'], function () {\n    Autoplay.disable();\n    Autoplay.stop();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['run.after', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['play'], function () {\n    Autoplay.enable();\n    Autoplay.start();\n  });\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Autoplay;\n}\n\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\n\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn(\"Breakpoints option must be an object\");\n  }\n\n  return {};\n}\n\nfunction Breakpoints (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n\n  var settings = Glide.settings;\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n\n  var points = sortBreakpoints(settings.breakpoints);\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n\n  var defaults = Object.assign({}, settings);\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia(\"(max-width: \".concat(point, \"px)\")).matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n\n  Object.assign(settings, Breakpoints.match(points));\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n    defaults = Object.assign({}, settings);\n  });\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n  return Breakpoints;\n}\n\nvar COMPONENTS = {\n  // Required\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run,\n  // Optional\n  Swipe: Swipe,\n  Images: Images,\n  Anchors: Anchors,\n  Controls: Controls,\n  Keyboard: Keyboard,\n  Autoplay: Autoplay,\n  Breakpoints: Breakpoints\n};\n\nvar Glide = /*#__PURE__*/function (_Core) {\n  _inherits(Glide, _Core);\n\n  var _super = _createSuper(Glide);\n\n  function Glide() {\n    _classCallCheck(this, Glide);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _get(_getPrototypeOf(Glide.prototype), \"mount\", this).call(this, Object.assign({}, COMPONENTS, extensions));\n    }\n  }]);\n\n  return Glide;\n}(Glide$1);\n\nexport { Glide as default };\n","import '../../node_modules/@glidejs/glide/dist/css/glide.core.min.css';\r\nimport '../../node_modules/@glidejs/glide/dist/css/glide.theme.min.css';\r\nimport './style.css';\r\nimport Glide from '@glidejs/glide';\r\n\r\nfunction create_element(html) {\r\n    let div = document.createElement('div');\r\n    \r\n    div.innerHTML = html.trim();  \r\n    return div.firstChild;\r\n}\r\n\r\nfunction glide_slider(el, options) {\r\n    let default_options = {\r\n        type: 'carousel',\r\n        startAt: 0,\r\n        perView: 3,\r\n        focusAt: 'center',\r\n        gap: 20,\r\n        autoplay: 2000,\r\n        hoverpause: true,\r\n        keyboard: true,\r\n        animationDuration: 400,\r\n        arrows: true,\r\n        bullets: false\r\n    }\r\n\r\n    let settings = Object.assign(default_options, options);\r\n    let glide = new Glide(el, settings);\r\n    let sb = new Array();\r\n\r\n    if (settings.arrows) {\r\n        sb.push('<div class=\"glide__arrows\" data-glide-el=\"controls\">');\r\n        sb.push('<button class=\"glide__arrow glide__arrow--left\" data-glide-dir=\"<\"><svg viewBox=\"0 0 24 24\" style=\"fill: currentColor;\"><path d=\"M13.939 4.939 6.879 12l7.06 7.061 2.122-2.122L11.121 12l4.94-4.939z\"></path></svg></button>');\r\n        sb.push('<button class=\"glide__arrow glide__arrow--right\" data-glide-dir=\">\"><svg viewBox=\"0 0 24 24\" style=\"fill: currentColor;\"><path d=\"M10.061 19.061 17.121 12l-7.06-7.061-2.122 2.122L12.879 12l-4.94 4.939z\"></path></svg></button>');\r\n        sb.push('</div>');\r\n    \r\n        let div = create_element(sb.join(''));\r\n        el.append(div);\r\n    }\r\n\r\n    if (settings.bullets) {\r\n        sb = new Array();\r\n        sb.push('<div class=\"glide__bullets\" data-glide-el=\"controls[nav]\">');\r\n        sb.push('<button class=\"glide__bullet\" data-glide-dir=\"=0\"></button>');\r\n        sb.push('<button class=\"glide__bullet\" data-glide-dir=\"=1\"></button>');\r\n        sb.push('<button class=\"glide__bullet\" data-glide-dir=\"=2\"></button>');\r\n        sb.push('</div>');        \r\n\r\n        let div = create_element(sb.join(''));\r\n        el.append(div);\r\n    }\r\n    \r\n    glide.mount();\r\n\r\n    return glide;\r\n}\r\n\r\nexport default glide_slider;"],"names":["ownKeys","object","enumerableOnly","keys","symbols","sym","_objectSpread2","target","i","source","key","_defineProperty","_typeof","obj","_classCallCheck","instance","Constructor","_defineProperties","props","descriptor","_createClass","protoProps","staticProps","value","_inherits","subClass","superClass","_setPrototypeOf","_getPrototypeOf","o","p","_isNativeReflectConstruct","_assertThisInitialized","self","_possibleConstructorReturn","call","_createSuper","Derived","hasNativeReflectConstruct","Super","result","NewTarget","_superPropBase","property","_get","receiver","base","desc","defaults","warn","msg","toInt","toFloat","isString","isObject","type","isFunction","isUndefined","isArray","mount","glide","extensions","events","components","name","_name","define","prop","definition","sortKeys","r","k","mergeOptions","settings","options","properties","EventsBus","event","handler","index","context","item","Glide$1","Glide","selector","transformers","pattern","distance","interval","status","Run","Components","Events","move","_this","length","steps","direction","viewSize","calculateForwardIndex","normalizeForwardIndex","_index","calculateBackwardIndex","normalizeBackwardIndex","view","step","now","throttle","func","wait","timeout","args","previous","later","throttled","at","remaining","MARGIN_TYPE","Gaps","slides","len","style","perView","siblings","node","n","matched","toArray","nodeList","TRACK_SELECTOR","Html","slide","t","Peek","Move","offset","translate","Sizes","width","Build","classes","sibling","_Glide$settings$class","Clones","items","_Glide$settings","cloningRatio","peekIncrementer","cloneCount","append","prepend","clone","_i","_clone","_Components$Html","wrapper","half","_i2","_i3","EventsBinder","listeners","el","closure","capture","Resize","Binder","VALID_DIRECTIONS","FLIPED_MOVEMENTS","Direction","token","Rtl","Gap","multiplier","Grow","Peeking","peek","Focusing","gap","focusAt","slideWidth","mutator","TRANSFORMERS","transformer","Translate","transform","translate3d","travelDistance","startWidth","Transition","disabled","callback","supportsPassive","opts","supportsPassive$1","START_EVENTS","MOVE_EVENTS","END_EVENTS","MOUSE_EVENTS","Swipe","swipeSin","swipeStartX","swipeStartY","swipe","touchAngle","touchRatio","subExSx","subEySy","powEX","powEY","swipeHypotenuse","swipeCathetus","_Glide$settings2","perSwipe","threshold","swipeDistance","swipeDeg","_Glide$settings3","swipeThreshold","dragThreshold","_this2","_this3","Images","Anchors","detached","prevented","NAV_SELECTOR","CONTROLS_SELECTOR","PREVIOUS_CONTROLS_SELECTOR","NEXT_CONTROLS_SELECTOR","Controls","controls","next","_len","lists","_key","list","element","_len2","_key2","elements","Keyboard","arrowSymbols","Autoplay","autoplay","sortBreakpoints","points","Breakpoints","point","COMPONENTS","_Core","_super","create_element","html","div","glide_slider","sb"],"mappings":"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","x_google_ignoreList":[0]}